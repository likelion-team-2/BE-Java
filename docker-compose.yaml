version: "3.1"

services:
  postgres:
    container_name: postgres_webchat
    restart: always
    image: postgres:12
    ports:
      - 15432:5432
    shm_size: 4GB
    volumes:
      - postgres_data:/var/lib/postgresql/data
    #      - $PROJECT_DIR/backend/db:/db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=webchat
      - POSTGRES_DATA=/var/lib/postgresql/data/pgdata

#  redis:
#    image: redis:latest
#    restart: always
#    ports:
#      - "6379:6379"
#    volumes:
#      - ~/.docker/data/redisorderappappconf:/redis.conf
#      - ~/.docker/data/redisorderappapp:/var/lib/redis
#    command: redis-server --requirepass 1234


  #  nginx:
  #    container_name: etop_nginx
  #    image: nginx:alpine
  #    ports:
  #      - 4080:80
  #    volumes:
  #      - $PROJECT_DIR/backend/scripts/nginx/conf.d:/etc/nginx/conf.d
  #    extra_hosts:
  #      - "local1:192.168.65.1"
  #      - "local2:192.168.65.2"
  #    command: /bin/sh -c "apk --no-cache add curl && nginx -g 'daemon off;'"

#  zookeeper:
#    container_name: zookeeper
#    image: confluentinc/cp-zookeeper
#    restart: always
#    ports:
#      - "2181:2181"
#    environment:
#      ZOOKEEPER_CLIENT_PORT: 2181
#
#  kafka:
#    container_name: kafka
#    image: confluentinc/cp-kafka
#    restart: always
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      ADVERTISED_HOST: localhost
#      ADVERTISED_PORT: 9092
#      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://localhost:9092"
#      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

volumes:
  postgres_data:
#  redisorderappconf:
#  redisorderapp:
#  zookeeperorderapp:
#  kafkaorderapp: